// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/grpc.proto

package grpc // import "github.com/empirefox/hybrid/grpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import config "github.com/empirefox/hybrid/config"
import authstore "github.com/empirefox/hybrid/pkg/authstore"
import empty "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Version struct {
	DialIpfsProtocol     string   `protobuf:"bytes,1,opt,name=dialIpfsProtocol,proto3" json:"dialIpfsProtocol,omitempty"`
	Ipfs                 string   `protobuf:"bytes,2,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
	IpfsRepo             int32    `protobuf:"varint,3,opt,name=ipfsRepo,proto3" json:"ipfsRepo,omitempty"`
	LibP2PProtocol       string   `protobuf:"bytes,4,opt,name=libP2PProtocol,proto3" json:"libP2PProtocol,omitempty"`
	GoLibP2P             string   `protobuf:"bytes,5,opt,name=goLibP2P,proto3" json:"goLibP2P,omitempty"`
	Golang               string   `protobuf:"bytes,6,opt,name=golang,proto3" json:"golang,omitempty"`
	System               string   `protobuf:"bytes,7,opt,name=system,proto3" json:"system,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{0}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (dst *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(dst, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetDialIpfsProtocol() string {
	if m != nil {
		return m.DialIpfsProtocol
	}
	return ""
}

func (m *Version) GetIpfs() string {
	if m != nil {
		return m.Ipfs
	}
	return ""
}

func (m *Version) GetIpfsRepo() int32 {
	if m != nil {
		return m.IpfsRepo
	}
	return 0
}

func (m *Version) GetLibP2PProtocol() string {
	if m != nil {
		return m.LibP2PProtocol
	}
	return ""
}

func (m *Version) GetGoLibP2P() string {
	if m != nil {
		return m.GoLibP2P
	}
	return ""
}

func (m *Version) GetGolang() string {
	if m != nil {
		return m.Golang
	}
	return ""
}

func (m *Version) GetSystem() string {
	if m != nil {
		return m.System
	}
	return ""
}

type StartRequest struct {
	Root                 string   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRequest) Reset()         { *m = StartRequest{} }
func (m *StartRequest) String() string { return proto.CompactTextString(m) }
func (*StartRequest) ProtoMessage()    {}
func (*StartRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{1}
}
func (m *StartRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRequest.Unmarshal(m, b)
}
func (m *StartRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRequest.Marshal(b, m, deterministic)
}
func (dst *StartRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRequest.Merge(dst, src)
}
func (m *StartRequest) XXX_Size() int {
	return xxx_messageInfo_StartRequest.Size(m)
}
func (m *StartRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRequest proto.InternalMessageInfo

func (m *StartRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

type GetConfigRequest struct {
	Root                 string   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Load                 bool     `protobuf:"varint,2,opt,name=load,proto3" json:"load,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{2}
}
func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (dst *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(dst, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *GetConfigRequest) GetLoad() bool {
	if m != nil {
		return m.Load
	}
	return false
}

type SaveConfigRequest struct {
	Root                 string         `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Config               *config.Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SaveConfigRequest) Reset()         { *m = SaveConfigRequest{} }
func (m *SaveConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SaveConfigRequest) ProtoMessage()    {}
func (*SaveConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{3}
}
func (m *SaveConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveConfigRequest.Unmarshal(m, b)
}
func (m *SaveConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveConfigRequest.Marshal(b, m, deterministic)
}
func (dst *SaveConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveConfigRequest.Merge(dst, src)
}
func (m *SaveConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SaveConfigRequest.Size(m)
}
func (m *SaveConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SaveConfigRequest proto.InternalMessageInfo

func (m *SaveConfigRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *SaveConfigRequest) GetConfig() *config.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type SaveConfigReply struct {
	Errors               []*ValidatorV9Error `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SaveConfigReply) Reset()         { *m = SaveConfigReply{} }
func (m *SaveConfigReply) String() string { return proto.CompactTextString(m) }
func (*SaveConfigReply) ProtoMessage()    {}
func (*SaveConfigReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{4}
}
func (m *SaveConfigReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveConfigReply.Unmarshal(m, b)
}
func (m *SaveConfigReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveConfigReply.Marshal(b, m, deterministic)
}
func (dst *SaveConfigReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveConfigReply.Merge(dst, src)
}
func (m *SaveConfigReply) XXX_Size() int {
	return xxx_messageInfo_SaveConfigReply.Size(m)
}
func (m *SaveConfigReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveConfigReply.DiscardUnknown(m)
}

var xxx_messageInfo_SaveConfigReply proto.InternalMessageInfo

func (m *SaveConfigReply) GetErrors() []*ValidatorV9Error {
	if m != nil {
		return m.Errors
	}
	return nil
}

type BindRequest struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindRequest) Reset()         { *m = BindRequest{} }
func (m *BindRequest) String() string { return proto.CompactTextString(m) }
func (*BindRequest) ProtoMessage()    {}
func (*BindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{5}
}
func (m *BindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindRequest.Unmarshal(m, b)
}
func (m *BindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindRequest.Marshal(b, m, deterministic)
}
func (dst *BindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindRequest.Merge(dst, src)
}
func (m *BindRequest) XXX_Size() int {
	return xxx_messageInfo_BindRequest.Size(m)
}
func (m *BindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BindRequest proto.InternalMessageInfo

func (m *BindRequest) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *BindRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type BindData struct {
	Bind                 uint32   `protobuf:"varint,2,opt,name=bind,proto3" json:"bind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindData) Reset()         { *m = BindData{} }
func (m *BindData) String() string { return proto.CompactTextString(m) }
func (*BindData) ProtoMessage()    {}
func (*BindData) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{6}
}
func (m *BindData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindData.Unmarshal(m, b)
}
func (m *BindData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindData.Marshal(b, m, deterministic)
}
func (dst *BindData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindData.Merge(dst, src)
}
func (m *BindData) XXX_Size() int {
	return xxx_messageInfo_BindData.Size(m)
}
func (m *BindData) XXX_DiscardUnknown() {
	xxx_messageInfo_BindData.DiscardUnknown(m)
}

var xxx_messageInfo_BindData proto.InternalMessageInfo

func (m *BindData) GetBind() uint32 {
	if m != nil {
		return m.Bind
	}
	return 0
}

type BackupRequest struct {
	Root                 string   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Tgz                  string   `protobuf:"bytes,2,opt,name=tgz,proto3" json:"tgz,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupRequest) Reset()         { *m = BackupRequest{} }
func (m *BackupRequest) String() string { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()    {}
func (*BackupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{7}
}
func (m *BackupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupRequest.Unmarshal(m, b)
}
func (m *BackupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupRequest.Marshal(b, m, deterministic)
}
func (dst *BackupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupRequest.Merge(dst, src)
}
func (m *BackupRequest) XXX_Size() int {
	return xxx_messageInfo_BackupRequest.Size(m)
}
func (m *BackupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupRequest proto.InternalMessageInfo

func (m *BackupRequest) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *BackupRequest) GetTgz() string {
	if m != nil {
		return m.Tgz
	}
	return ""
}

func (m *BackupRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AddVerifyKeyRequest struct {
	// unique
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	Desc                 string   `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	LifeSeconds          uint32   `protobuf:"varint,4,opt,name=lifeSeconds,proto3" json:"lifeSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVerifyKeyRequest) Reset()         { *m = AddVerifyKeyRequest{} }
func (m *AddVerifyKeyRequest) String() string { return proto.CompactTextString(m) }
func (*AddVerifyKeyRequest) ProtoMessage()    {}
func (*AddVerifyKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{8}
}
func (m *AddVerifyKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVerifyKeyRequest.Unmarshal(m, b)
}
func (m *AddVerifyKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVerifyKeyRequest.Marshal(b, m, deterministic)
}
func (dst *AddVerifyKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVerifyKeyRequest.Merge(dst, src)
}
func (m *AddVerifyKeyRequest) XXX_Size() int {
	return xxx_messageInfo_AddVerifyKeyRequest.Size(m)
}
func (m *AddVerifyKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVerifyKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddVerifyKeyRequest proto.InternalMessageInfo

func (m *AddVerifyKeyRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *AddVerifyKeyRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AddVerifyKeyRequest) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AddVerifyKeyRequest) GetLifeSeconds() uint32 {
	if m != nil {
		return m.LifeSeconds
	}
	return 0
}

type AddVerifyKeyReply struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int64    `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	ExpiresAt            int64    `protobuf:"varint,3,opt,name=expiresAt,proto3" json:"expiresAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVerifyKeyReply) Reset()         { *m = AddVerifyKeyReply{} }
func (m *AddVerifyKeyReply) String() string { return proto.CompactTextString(m) }
func (*AddVerifyKeyReply) ProtoMessage()    {}
func (*AddVerifyKeyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{9}
}
func (m *AddVerifyKeyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVerifyKeyReply.Unmarshal(m, b)
}
func (m *AddVerifyKeyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVerifyKeyReply.Marshal(b, m, deterministic)
}
func (dst *AddVerifyKeyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVerifyKeyReply.Merge(dst, src)
}
func (m *AddVerifyKeyReply) XXX_Size() int {
	return xxx_messageInfo_AddVerifyKeyReply.Size(m)
}
func (m *AddVerifyKeyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVerifyKeyReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddVerifyKeyReply proto.InternalMessageInfo

func (m *AddVerifyKeyReply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AddVerifyKeyReply) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *AddVerifyKeyReply) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type VerifyKeySliceRequest struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Reverse              bool     `protobuf:"varint,3,opt,name=reverse,proto3" json:"reverse,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyKeySliceRequest) Reset()         { *m = VerifyKeySliceRequest{} }
func (m *VerifyKeySliceRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyKeySliceRequest) ProtoMessage()    {}
func (*VerifyKeySliceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{10}
}
func (m *VerifyKeySliceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyKeySliceRequest.Unmarshal(m, b)
}
func (m *VerifyKeySliceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyKeySliceRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyKeySliceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyKeySliceRequest.Merge(dst, src)
}
func (m *VerifyKeySliceRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyKeySliceRequest.Size(m)
}
func (m *VerifyKeySliceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyKeySliceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyKeySliceRequest proto.InternalMessageInfo

func (m *VerifyKeySliceRequest) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *VerifyKeySliceRequest) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *VerifyKeySliceRequest) GetReverse() bool {
	if m != nil {
		return m.Reverse
	}
	return false
}

type AuthKeySliceReply struct {
	Keys                 []*authstore.AuthKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	Err                  string               `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AuthKeySliceReply) Reset()         { *m = AuthKeySliceReply{} }
func (m *AuthKeySliceReply) String() string { return proto.CompactTextString(m) }
func (*AuthKeySliceReply) ProtoMessage()    {}
func (*AuthKeySliceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{11}
}
func (m *AuthKeySliceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthKeySliceReply.Unmarshal(m, b)
}
func (m *AuthKeySliceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthKeySliceReply.Marshal(b, m, deterministic)
}
func (dst *AuthKeySliceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthKeySliceReply.Merge(dst, src)
}
func (m *AuthKeySliceReply) XXX_Size() int {
	return xxx_messageInfo_AuthKeySliceReply.Size(m)
}
func (m *AuthKeySliceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthKeySliceReply.DiscardUnknown(m)
}

var xxx_messageInfo_AuthKeySliceReply proto.InternalMessageInfo

func (m *AuthKeySliceReply) GetKeys() []*authstore.AuthKey {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *AuthKeySliceReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type VerifyKeyIdRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyKeyIdRequest) Reset()         { *m = VerifyKeyIdRequest{} }
func (m *VerifyKeyIdRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyKeyIdRequest) ProtoMessage()    {}
func (*VerifyKeyIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_grpc_1342468d2fd77fb0, []int{12}
}
func (m *VerifyKeyIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyKeyIdRequest.Unmarshal(m, b)
}
func (m *VerifyKeyIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyKeyIdRequest.Marshal(b, m, deterministic)
}
func (dst *VerifyKeyIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyKeyIdRequest.Merge(dst, src)
}
func (m *VerifyKeyIdRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyKeyIdRequest.Size(m)
}
func (m *VerifyKeyIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyKeyIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyKeyIdRequest proto.InternalMessageInfo

func (m *VerifyKeyIdRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*Version)(nil), "protos.Version")
	proto.RegisterType((*StartRequest)(nil), "protos.StartRequest")
	proto.RegisterType((*GetConfigRequest)(nil), "protos.GetConfigRequest")
	proto.RegisterType((*SaveConfigRequest)(nil), "protos.SaveConfigRequest")
	proto.RegisterType((*SaveConfigReply)(nil), "protos.SaveConfigReply")
	proto.RegisterType((*BindRequest)(nil), "protos.BindRequest")
	proto.RegisterType((*BindData)(nil), "protos.BindData")
	proto.RegisterType((*BackupRequest)(nil), "protos.BackupRequest")
	proto.RegisterType((*AddVerifyKeyRequest)(nil), "protos.AddVerifyKeyRequest")
	proto.RegisterType((*AddVerifyKeyReply)(nil), "protos.AddVerifyKeyReply")
	proto.RegisterType((*VerifyKeySliceRequest)(nil), "protos.VerifyKeySliceRequest")
	proto.RegisterType((*AuthKeySliceReply)(nil), "protos.AuthKeySliceReply")
	proto.RegisterType((*VerifyKeyIdRequest)(nil), "protos.VerifyKeyIdRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HybridClient is the client API for Hybrid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HybridClient interface {
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error)
	GetConfigTree(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*config.ConfigTree, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*config.Config, error)
	SaveConfig(ctx context.Context, in *SaveConfigRequest, opts ...grpc.CallOption) (*SaveConfigReply, error)
	Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Stop(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	WaitUntilStopped(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	BindConfigProxy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	UnbindConfigProxy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	BindProxy(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error)
	BindIpfsApi(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error)
	BindIpfsGateway(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error)
	Unbind(ctx context.Context, in *BindData, opts ...grpc.CallOption) (*empty.Empty, error)
	IpfsRepoFsck(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Restore(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AddVerifyKey(ctx context.Context, in *AddVerifyKeyRequest, opts ...grpc.CallOption) (*AddVerifyKeyReply, error)
	GetVerifyKeys(ctx context.Context, in *VerifyKeySliceRequest, opts ...grpc.CallOption) (*AuthKeySliceReply, error)
	FindVerifyKey(ctx context.Context, in *VerifyKeyIdRequest, opts ...grpc.CallOption) (*authstore.AuthKey, error)
	DeleteVerifyKey(ctx context.Context, in *VerifyKeyIdRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type hybridClient struct {
	cc *grpc.ClientConn
}

func NewHybridClient(cc *grpc.ClientConn) HybridClient {
	return &hybridClient{cc}
}

func (c *hybridClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error) {
	out := new(Version)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) GetConfigTree(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*config.ConfigTree, error) {
	out := new(config.ConfigTree)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/GetConfigTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*config.Config, error) {
	out := new(config.Config)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) SaveConfig(ctx context.Context, in *SaveConfigRequest, opts ...grpc.CallOption) (*SaveConfigReply, error) {
	out := new(SaveConfigReply)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/SaveConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) Start(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) Stop(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) WaitUntilStopped(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/WaitUntilStopped", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) BindConfigProxy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/BindConfigProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) UnbindConfigProxy(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/UnbindConfigProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) BindProxy(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error) {
	out := new(BindData)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/BindProxy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) BindIpfsApi(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error) {
	out := new(BindData)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/BindIpfsApi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) BindIpfsGateway(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*BindData, error) {
	out := new(BindData)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/BindIpfsGateway", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) Unbind(ctx context.Context, in *BindData, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/Unbind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) IpfsRepoFsck(ctx context.Context, in *StartRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/IpfsRepoFsck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/Backup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) Restore(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/Restore", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) AddVerifyKey(ctx context.Context, in *AddVerifyKeyRequest, opts ...grpc.CallOption) (*AddVerifyKeyReply, error) {
	out := new(AddVerifyKeyReply)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/AddVerifyKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) GetVerifyKeys(ctx context.Context, in *VerifyKeySliceRequest, opts ...grpc.CallOption) (*AuthKeySliceReply, error) {
	out := new(AuthKeySliceReply)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/GetVerifyKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) FindVerifyKey(ctx context.Context, in *VerifyKeyIdRequest, opts ...grpc.CallOption) (*authstore.AuthKey, error) {
	out := new(authstore.AuthKey)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/FindVerifyKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hybridClient) DeleteVerifyKey(ctx context.Context, in *VerifyKeyIdRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/protos.Hybrid/DeleteVerifyKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HybridServer is the server API for Hybrid service.
type HybridServer interface {
	GetVersion(context.Context, *empty.Empty) (*Version, error)
	GetConfigTree(context.Context, *StartRequest) (*config.ConfigTree, error)
	GetConfig(context.Context, *GetConfigRequest) (*config.Config, error)
	SaveConfig(context.Context, *SaveConfigRequest) (*SaveConfigReply, error)
	Start(context.Context, *StartRequest) (*empty.Empty, error)
	Stop(context.Context, *empty.Empty) (*empty.Empty, error)
	WaitUntilStopped(context.Context, *empty.Empty) (*empty.Empty, error)
	BindConfigProxy(context.Context, *empty.Empty) (*empty.Empty, error)
	UnbindConfigProxy(context.Context, *empty.Empty) (*empty.Empty, error)
	BindProxy(context.Context, *BindRequest) (*BindData, error)
	BindIpfsApi(context.Context, *BindRequest) (*BindData, error)
	BindIpfsGateway(context.Context, *BindRequest) (*BindData, error)
	Unbind(context.Context, *BindData) (*empty.Empty, error)
	IpfsRepoFsck(context.Context, *StartRequest) (*empty.Empty, error)
	Backup(context.Context, *BackupRequest) (*empty.Empty, error)
	Restore(context.Context, *BackupRequest) (*empty.Empty, error)
	AddVerifyKey(context.Context, *AddVerifyKeyRequest) (*AddVerifyKeyReply, error)
	GetVerifyKeys(context.Context, *VerifyKeySliceRequest) (*AuthKeySliceReply, error)
	FindVerifyKey(context.Context, *VerifyKeyIdRequest) (*authstore.AuthKey, error)
	DeleteVerifyKey(context.Context, *VerifyKeyIdRequest) (*empty.Empty, error)
}

func RegisterHybridServer(s *grpc.Server, srv HybridServer) {
	s.RegisterService(&_Hybrid_serviceDesc, srv)
}

func _Hybrid_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_GetConfigTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).GetConfigTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/GetConfigTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).GetConfigTree(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_SaveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).SaveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/SaveConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).SaveConfig(ctx, req.(*SaveConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).Start(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).Stop(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_WaitUntilStopped_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).WaitUntilStopped(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/WaitUntilStopped",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).WaitUntilStopped(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_BindConfigProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).BindConfigProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/BindConfigProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).BindConfigProxy(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_UnbindConfigProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).UnbindConfigProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/UnbindConfigProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).UnbindConfigProxy(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_BindProxy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).BindProxy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/BindProxy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).BindProxy(ctx, req.(*BindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_BindIpfsApi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).BindIpfsApi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/BindIpfsApi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).BindIpfsApi(ctx, req.(*BindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_BindIpfsGateway_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).BindIpfsGateway(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/BindIpfsGateway",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).BindIpfsGateway(ctx, req.(*BindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_Unbind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).Unbind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/Unbind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).Unbind(ctx, req.(*BindData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_IpfsRepoFsck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).IpfsRepoFsck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/IpfsRepoFsck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).IpfsRepoFsck(ctx, req.(*StartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).Restore(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_AddVerifyKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddVerifyKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).AddVerifyKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/AddVerifyKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).AddVerifyKey(ctx, req.(*AddVerifyKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_GetVerifyKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyKeySliceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).GetVerifyKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/GetVerifyKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).GetVerifyKeys(ctx, req.(*VerifyKeySliceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_FindVerifyKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyKeyIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).FindVerifyKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/FindVerifyKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).FindVerifyKey(ctx, req.(*VerifyKeyIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hybrid_DeleteVerifyKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyKeyIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HybridServer).DeleteVerifyKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Hybrid/DeleteVerifyKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HybridServer).DeleteVerifyKey(ctx, req.(*VerifyKeyIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hybrid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Hybrid",
	HandlerType: (*HybridServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _Hybrid_GetVersion_Handler,
		},
		{
			MethodName: "GetConfigTree",
			Handler:    _Hybrid_GetConfigTree_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _Hybrid_GetConfig_Handler,
		},
		{
			MethodName: "SaveConfig",
			Handler:    _Hybrid_SaveConfig_Handler,
		},
		{
			MethodName: "Start",
			Handler:    _Hybrid_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Hybrid_Stop_Handler,
		},
		{
			MethodName: "WaitUntilStopped",
			Handler:    _Hybrid_WaitUntilStopped_Handler,
		},
		{
			MethodName: "BindConfigProxy",
			Handler:    _Hybrid_BindConfigProxy_Handler,
		},
		{
			MethodName: "UnbindConfigProxy",
			Handler:    _Hybrid_UnbindConfigProxy_Handler,
		},
		{
			MethodName: "BindProxy",
			Handler:    _Hybrid_BindProxy_Handler,
		},
		{
			MethodName: "BindIpfsApi",
			Handler:    _Hybrid_BindIpfsApi_Handler,
		},
		{
			MethodName: "BindIpfsGateway",
			Handler:    _Hybrid_BindIpfsGateway_Handler,
		},
		{
			MethodName: "Unbind",
			Handler:    _Hybrid_Unbind_Handler,
		},
		{
			MethodName: "IpfsRepoFsck",
			Handler:    _Hybrid_IpfsRepoFsck_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Hybrid_Backup_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Hybrid_Restore_Handler,
		},
		{
			MethodName: "AddVerifyKey",
			Handler:    _Hybrid_AddVerifyKey_Handler,
		},
		{
			MethodName: "GetVerifyKeys",
			Handler:    _Hybrid_GetVerifyKeys_Handler,
		},
		{
			MethodName: "FindVerifyKey",
			Handler:    _Hybrid_FindVerifyKey_Handler,
		},
		{
			MethodName: "DeleteVerifyKey",
			Handler:    _Hybrid_DeleteVerifyKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/grpc.proto",
}

func init() { proto.RegisterFile("protos/grpc.proto", fileDescriptor_grpc_1342468d2fd77fb0) }

var fileDescriptor_grpc_1342468d2fd77fb0 = []byte{
	// 942 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x56, 0xdd, 0x4f, 0x1b, 0x47,
	0x10, 0x2f, 0xb1, 0x31, 0x78, 0xc0, 0x60, 0x96, 0x84, 0x38, 0x97, 0xb6, 0x42, 0xd7, 0x2a, 0xaa,
	0xfa, 0x60, 0x2a, 0x1a, 0x35, 0x0d, 0x95, 0x2a, 0x41, 0x20, 0x84, 0xa6, 0x52, 0xe9, 0xb9, 0xa1,
	0x52, 0xfb, 0x50, 0x9d, 0xef, 0xd6, 0xc7, 0x89, 0xc3, 0x7b, 0xb9, 0x5d, 0x13, 0x9c, 0xff, 0xb4,
	0x7f, 0x49, 0x5f, 0x3b, 0xb3, 0x1f, 0xc7, 0xc5, 0x8e, 0xdd, 0x90, 0x3e, 0x79, 0x3e, 0x76, 0x7e,
	0xf3, 0xb1, 0x3b, 0x3f, 0x1f, 0x6c, 0xe4, 0x85, 0x50, 0x42, 0xee, 0x24, 0x45, 0x1e, 0x75, 0xb5,
	0xcc, 0x1a, 0xc6, 0xe4, 0x3d, 0x4c, 0x84, 0x48, 0x32, 0xbe, 0xa3, 0xd5, 0xfe, 0x68, 0xb0, 0xc3,
	0x2f, 0x73, 0x35, 0x36, 0x87, 0xbc, 0x4d, 0x1b, 0x17, 0x89, 0xe1, 0x20, 0x4d, 0xac, 0x71, 0xcb,
	0x1a, 0xc3, 0x91, 0x3a, 0x97, 0x4a, 0x14, 0xdc, 0xda, 0xef, 0x5b, 0xfb, 0x55, 0x98, 0xa5, 0x71,
	0x88, 0x0e, 0x69, 0x1c, 0xfe, 0xdf, 0x0b, 0xb0, 0x74, 0xc6, 0x0b, 0x99, 0x8a, 0x21, 0xfb, 0x1a,
	0xda, 0x71, 0x1a, 0x66, 0x27, 0xf9, 0x40, 0x9e, 0x92, 0x33, 0x12, 0x59, 0x67, 0x61, 0x7b, 0xe1,
	0xab, 0x66, 0x30, 0x65, 0x67, 0x0c, 0xea, 0x29, 0xea, 0x9d, 0x3b, 0xda, 0xaf, 0x65, 0xe6, 0xc1,
	0x32, 0xfd, 0x06, 0x3c, 0x17, 0x9d, 0x1a, 0xda, 0x17, 0x83, 0x52, 0x67, 0x8f, 0x60, 0x2d, 0x4b,
	0xfb, 0xa7, 0xbb, 0xa7, 0x25, 0x72, 0x5d, 0x47, 0x4e, 0x58, 0x09, 0x23, 0x11, 0x3f, 0x6b, 0x5b,
	0x67, 0x51, 0x9f, 0x28, 0x75, 0xb6, 0x05, 0x8d, 0x44, 0x64, 0xe1, 0x30, 0xe9, 0x34, 0xb4, 0xc7,
	0x6a, 0x64, 0x97, 0x63, 0xa9, 0xf8, 0x65, 0x67, 0xc9, 0xd8, 0x8d, 0xe6, 0xfb, 0xb0, 0xda, 0x53,
	0x61, 0xa1, 0x02, 0xfe, 0x7a, 0xc4, 0xa5, 0xa2, 0x9a, 0x0b, 0x21, 0x94, 0xed, 0x49, 0xcb, 0xfe,
	0x1e, 0xb4, 0x8f, 0xb9, 0x7a, 0xa6, 0x67, 0x38, 0xe7, 0x1c, 0xd9, 0x32, 0x11, 0xc6, 0xba, 0xdf,
	0xe5, 0x40, 0xcb, 0xfe, 0x2f, 0xb0, 0xd1, 0x0b, 0xaf, 0xf8, 0x7f, 0x07, 0x3f, 0x82, 0x86, 0xb9,
	0x25, 0x1d, 0xbe, 0xb2, 0xbb, 0x66, 0x86, 0x2f, 0xbb, 0x36, 0xd4, 0x7a, 0xfd, 0x67, 0xb0, 0x5e,
	0x05, 0xcc, 0xb3, 0x31, 0xfb, 0x06, 0x1a, 0xbc, 0x28, 0xf0, 0xbe, 0x10, 0xb0, 0x86, 0xa1, 0x1d,
	0x17, 0x7a, 0xe6, 0x6e, 0xf2, 0xec, 0xe9, 0x11, 0x1d, 0x08, 0xec, 0x39, 0x7f, 0x1f, 0x56, 0x0e,
	0xd2, 0x61, 0xec, 0xea, 0xe9, 0xc0, 0xd2, 0x90, 0xab, 0x37, 0xa2, 0xb8, 0xb0, 0x25, 0x39, 0x95,
	0x3c, 0x61, 0x1c, 0x17, 0x5c, 0xba, 0x5b, 0x74, 0xaa, 0xff, 0x39, 0x2c, 0x13, 0xc4, 0x61, 0xa8,
	0x42, 0xea, 0xa7, 0x8f, 0xb2, 0x3e, 0xd2, 0x0a, 0xb4, 0xec, 0xff, 0x0a, 0xad, 0x83, 0x30, 0xba,
	0x18, 0xe5, 0xf3, 0x9a, 0x6e, 0x43, 0x4d, 0x25, 0x6f, 0x2d, 0x34, 0x89, 0x74, 0xb7, 0x79, 0x28,
	0x25, 0x26, 0x8f, 0xf5, 0xfb, 0xc0, 0xbb, 0x75, 0xba, 0xff, 0x1a, 0x36, 0xf7, 0xe3, 0x18, 0x5f,
	0x62, 0x3a, 0x18, 0xbf, 0xe4, 0x63, 0x07, 0x8c, 0x20, 0x17, 0x7c, 0xac, 0x71, 0x57, 0x03, 0x12,
	0x29, 0x95, 0x0a, 0x13, 0x2a, 0xb9, 0x46, 0xa9, 0x48, 0x26, 0x5b, 0xcc, 0x65, 0x64, 0x41, 0xb5,
	0xcc, 0xb6, 0x61, 0x25, 0x4b, 0x07, 0xbc, 0xc7, 0x71, 0xb6, 0xb1, 0xd4, 0xaf, 0xad, 0x15, 0x54,
	0x4d, 0xfe, 0x5f, 0xb0, 0xf1, 0x6e, 0x4a, 0x9a, 0xf7, 0x1a, 0xdc, 0x49, 0x63, 0x9d, 0xaf, 0x1e,
	0xa0, 0xc4, 0x3e, 0x85, 0x66, 0x54, 0xf0, 0x50, 0xf1, 0x78, 0x5f, 0xe9, 0x5e, 0x6a, 0xc1, 0x8d,
	0x81, 0xbc, 0xfc, 0x3a, 0x4f, 0x71, 0x68, 0xe8, 0xad, 0x19, 0x6f, 0x69, 0xf0, 0xff, 0x84, 0x7b,
	0x25, 0x7a, 0x2f, 0x4b, 0x23, 0xee, 0xba, 0xba, 0x0b, 0x8b, 0x92, 0x1e, 0xa6, 0xcd, 0x63, 0x14,
	0xea, 0x42, 0xa6, 0x6f, 0xb9, 0x9b, 0x34, 0xc9, 0x74, 0x47, 0x05, 0xbf, 0xc2, 0xfd, 0xe4, 0x1a,
	0x7e, 0x39, 0x70, 0xaa, 0xff, 0x13, 0x56, 0x8f, 0x4b, 0x7e, 0x03, 0x4d, 0xd5, 0x7f, 0x01, 0x75,
	0x9c, 0x91, 0x7b, 0x2b, 0xeb, 0xee, 0xad, 0xd8, 0x83, 0x81, 0x76, 0xd2, 0x4c, 0xf1, 0xa9, 0xb8,
	0x8b, 0x41, 0xd1, 0xff, 0x12, 0x58, 0x59, 0xe8, 0x49, 0xf9, 0x72, 0x26, 0x46, 0xb1, 0xfb, 0x4f,
	0x13, 0x1a, 0x2f, 0xc6, 0xfd, 0x02, 0xa7, 0xf2, 0x04, 0x00, 0xb7, 0xc6, 0xf1, 0xc6, 0x56, 0xd7,
	0xf0, 0x54, 0xd7, 0xf1, 0x54, 0xf7, 0x88, 0x78, 0xca, 0x2b, 0xf3, 0xdb, 0x83, 0xfe, 0x27, 0xec,
	0x07, 0x68, 0x95, 0xeb, 0xf6, 0x5b, 0xc1, 0x39, 0xbb, 0xeb, 0xce, 0x54, 0x37, 0xd5, 0x63, 0xef,
	0x2e, 0x08, 0x9d, 0xc4, 0xe0, 0x27, 0xd0, 0x2c, 0x83, 0x59, 0xb9, 0x08, 0x93, 0xeb, 0xeb, 0x4d,
	0x6c, 0x17, 0x06, 0x1e, 0x00, 0xdc, 0xec, 0x15, 0x7b, 0x50, 0xa6, 0x9c, 0x5c, 0x5e, 0xef, 0xfe,
	0xfb, 0x5c, 0x38, 0x58, 0x9d, 0x7c, 0x51, 0x97, 0x38, 0xa3, 0xe2, 0x19, 0x33, 0xc0, 0xc0, 0xef,
	0xa1, 0xde, 0x53, 0x22, 0x9f, 0x39, 0xa5, 0xd9, 0x91, 0x87, 0xd0, 0xfe, 0x3d, 0x4c, 0xd5, 0xab,
	0xa1, 0x4a, 0x33, 0x82, 0xc8, 0x79, 0xfc, 0x11, 0x28, 0x48, 0x2a, 0xb4, 0xcc, 0xa6, 0x1b, 0xe4,
	0xd9, 0xeb, 0xf1, 0x47, 0x80, 0x1c, 0xc1, 0xc6, 0xab, 0x61, 0xff, 0x7f, 0xc3, 0x3c, 0x86, 0x26,
	0xd5, 0x62, 0xc2, 0x37, 0xdd, 0x20, 0x2b, 0x74, 0xe5, 0xb5, 0xab, 0x46, 0x22, 0x20, 0x8c, 0xfa,
	0xce, 0x30, 0x1a, 0xfd, 0xff, 0xec, 0xe7, 0xe9, 0x87, 0xc7, 0xed, 0x99, 0xce, 0x29, 0xee, 0x18,
	0x17, 0xf6, 0x4d, 0x78, 0x8b, 0x9c, 0x8f, 0xa1, 0x61, 0x1a, 0x66, 0x53, 0xde, 0x39, 0xfd, 0xfd,
	0x08, 0xab, 0x27, 0xf6, 0x1f, 0xef, 0xb9, 0x8c, 0x2e, 0x6e, 0xfd, 0x56, 0x9e, 0x42, 0xc3, 0x10,
	0x2b, 0xbb, 0x57, 0x66, 0xad, 0x12, 0xed, 0x9c, 0xd0, 0x3d, 0x58, 0x0a, 0xb8, 0xfe, 0xcb, 0xbf,
	0x7d, 0xec, 0x0b, 0x58, 0xad, 0x32, 0x21, 0x7b, 0x58, 0x12, 0xc7, 0x34, 0x25, 0x7b, 0x0f, 0xde,
	0xef, 0x34, 0x5b, 0xf2, 0x52, 0xef, 0x77, 0x69, 0x96, 0xec, 0xb3, 0x0a, 0x07, 0x4c, 0x33, 0x61,
	0x05, 0x6c, 0x92, 0xcb, 0xf4, 0x34, 0x5b, 0xcf, 0x71, 0xe6, 0x37, 0x75, 0x79, 0x53, 0x60, 0x25,
	0x5b, 0x79, 0x93, 0x64, 0x87, 0xf1, 0xc7, 0xb0, 0x7e, 0xc8, 0x33, 0xae, 0xf8, 0x87, 0x21, 0xcc,
	0x9c, 0xcf, 0x81, 0xff, 0xc7, 0x76, 0x92, 0xaa, 0xf3, 0x51, 0xbf, 0x1b, 0x89, 0x4b, 0xfa, 0x08,
	0x43, 0x82, 0x1f, 0x88, 0xeb, 0x9d, 0x73, 0xcd, 0x86, 0xfa, 0xcb, 0xad, 0x6f, 0xbe, 0xd9, 0xbe,
	0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0xba, 0x0d, 0x8b, 0xf6, 0xcf, 0x09, 0x00, 0x00,
}
