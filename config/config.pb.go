// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/config.proto

package config // import "github.com/empirefox/hybrid/config"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfigTree struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	RootName             string   `protobuf:"bytes,2,opt,name=rootName,proto3" json:"rootName,omitempty"`
	RootPath             string   `protobuf:"bytes,3,opt,name=rootPath,proto3" json:"rootPath,omitempty"`
	ConfigName           string   `protobuf:"bytes,4,opt,name=configName,proto3" json:"configName,omitempty"`
	ConfigPath           string   `protobuf:"bytes,5,opt,name=configPath,proto3" json:"configPath,omitempty"`
	IpfsName             string   `protobuf:"bytes,6,opt,name=ipfsName,proto3" json:"ipfsName,omitempty"`
	IpfsPath             string   `protobuf:"bytes,7,opt,name=ipfsPath,proto3" json:"ipfsPath,omitempty"`
	StoreName            string   `protobuf:"bytes,8,opt,name=storeName,proto3" json:"storeName,omitempty"`
	StorePath            string   `protobuf:"bytes,9,opt,name=storePath,proto3" json:"storePath,omitempty"`
	FilesRootName        string   `protobuf:"bytes,10,opt,name=filesRootName,proto3" json:"filesRootName,omitempty"`
	FilesRootPath        string   `protobuf:"bytes,11,opt,name=filesRootPath,proto3" json:"filesRootPath,omitempty"`
	RulesRootName        string   `protobuf:"bytes,12,opt,name=rulesRootName,proto3" json:"rulesRootName,omitempty"`
	RulesRootPath        string   `protobuf:"bytes,13,opt,name=rulesRootPath,proto3" json:"rulesRootPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigTree) Reset()         { *m = ConfigTree{} }
func (m *ConfigTree) String() string { return proto.CompactTextString(m) }
func (*ConfigTree) ProtoMessage()    {}
func (*ConfigTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{0}
}
func (m *ConfigTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigTree.Unmarshal(m, b)
}
func (m *ConfigTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigTree.Marshal(b, m, deterministic)
}
func (dst *ConfigTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigTree.Merge(dst, src)
}
func (m *ConfigTree) XXX_Size() int {
	return xxx_messageInfo_ConfigTree.Size(m)
}
func (m *ConfigTree) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigTree.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigTree proto.InternalMessageInfo

func (m *ConfigTree) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ConfigTree) GetRootName() string {
	if m != nil {
		return m.RootName
	}
	return ""
}

func (m *ConfigTree) GetRootPath() string {
	if m != nil {
		return m.RootPath
	}
	return ""
}

func (m *ConfigTree) GetConfigName() string {
	if m != nil {
		return m.ConfigName
	}
	return ""
}

func (m *ConfigTree) GetConfigPath() string {
	if m != nil {
		return m.ConfigPath
	}
	return ""
}

func (m *ConfigTree) GetIpfsName() string {
	if m != nil {
		return m.IpfsName
	}
	return ""
}

func (m *ConfigTree) GetIpfsPath() string {
	if m != nil {
		return m.IpfsPath
	}
	return ""
}

func (m *ConfigTree) GetStoreName() string {
	if m != nil {
		return m.StoreName
	}
	return ""
}

func (m *ConfigTree) GetStorePath() string {
	if m != nil {
		return m.StorePath
	}
	return ""
}

func (m *ConfigTree) GetFilesRootName() string {
	if m != nil {
		return m.FilesRootName
	}
	return ""
}

func (m *ConfigTree) GetFilesRootPath() string {
	if m != nil {
		return m.FilesRootPath
	}
	return ""
}

func (m *ConfigTree) GetRulesRootName() string {
	if m != nil {
		return m.RulesRootName
	}
	return ""
}

func (m *ConfigTree) GetRulesRootPath() string {
	if m != nil {
		return m.RulesRootPath
	}
	return ""
}

type Basic struct {
	// @inject_tag: toml:",omitempty"
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty" env:"HYBRID_DEV"
	Dev bool `protobuf:"varint,2,opt,name=dev,proto3" json:"dev,omitempty" toml:",omitempty" env:"HYBRID_DEV"`
	// @inject_tag: toml:",omitempty" env:"HYBRID_BIND validate:"omitempty,tcp_addr"
	Bind string `protobuf:"bytes,3,opt,name=bind,proto3" json:"bind,omitempty" toml:",omitempty" env:"HYBRID_BIND validate:"`
	// @inject_tag: toml:",omitempty" default:"200"
	FlushIntervalMs uint32 `protobuf:"varint,4,opt,name=flushIntervalMs,proto3" json:"flushIntervalMs,omitempty" toml:",omitempty" default:"200"`
	// @inject_tag: toml:",omitempty" validate:"lte=732"
	// Token is fallback token that will be veried by servers, both Ipfs
	Token                string   `protobuf:"bytes,5,opt,name=token,proto3" json:"token,omitempty" toml:",omitempty" validate:"lte=732"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Basic) Reset()         { *m = Basic{} }
func (m *Basic) String() string { return proto.CompactTextString(m) }
func (*Basic) ProtoMessage()    {}
func (*Basic) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{1}
}
func (m *Basic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Basic.Unmarshal(m, b)
}
func (m *Basic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Basic.Marshal(b, m, deterministic)
}
func (dst *Basic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Basic.Merge(dst, src)
}
func (m *Basic) XXX_Size() int {
	return xxx_messageInfo_Basic.Size(m)
}
func (m *Basic) XXX_DiscardUnknown() {
	xxx_messageInfo_Basic.DiscardUnknown(m)
}

var xxx_messageInfo_Basic proto.InternalMessageInfo

func (m *Basic) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Basic) GetDev() bool {
	if m != nil {
		return m.Dev
	}
	return false
}

func (m *Basic) GetBind() string {
	if m != nil {
		return m.Bind
	}
	return ""
}

func (m *Basic) GetFlushIntervalMs() uint32 {
	if m != nil {
		return m.FlushIntervalMs
	}
	return 0
}

func (m *Basic) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Log struct {
	// @inject_tag: toml:",omitempty"
	Dev bool `protobuf:"varint,1,opt,name=dev,proto3" json:"dev,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,oneof=debug info warn error dpanic panic fatal"
	Level string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty" toml:",omitempty" validate:"omitempty,oneof=debug info warn error dpanic panic fatal"`
	// @inject_tag: toml:",omitempty"
	// Target accepts "tcp://host:port?timeout=5s", file, sentryDSN or empty.
	// Register NewTCPSink to support tcp sink. Default is stderr.
	Target               string   `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty" toml:",omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{2}
}
func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (dst *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(dst, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetDev() bool {
	if m != nil {
		return m.Dev
	}
	return false
}

func (m *Log) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Log) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type Ipfs struct {
	// @inject_tag: toml:",omitempty" validate:"tcp_addr" default:"127.0.127.1:1270"
	FakeApiListenAddr string `protobuf:"bytes,1,opt,name=fakeApiListenAddr,proto3" json:"fakeApiListenAddr,omitempty" toml:",omitempty" validate:"tcp_addr" default:"127.0.127.1:1270"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	GatewayServerName string `protobuf:"bytes,2,opt,name=gatewayServerName,proto3" json:"gatewayServerName,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	ApiServerName string `protobuf:"bytes,3,opt,name=apiServerName,proto3" json:"apiServerName,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"unique"
	Profile []string `protobuf:"bytes,4,rep,name=profile,proto3" json:"profile,omitempty" toml:",omitempty" validate:"unique"`
	// @inject_tag: toml:",omitempty"
	AutoMigrate bool `protobuf:"varint,5,opt,name=autoMigrate,proto3" json:"autoMigrate,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	EnableIpnsPubSub bool `protobuf:"varint,6,opt,name=enableIpnsPubSub,proto3" json:"enableIpnsPubSub,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	EnablePubSub bool `protobuf:"varint,7,opt,name=enablePubSub,proto3" json:"enablePubSub,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	EnableMultiplex bool `protobuf:"varint,8,opt,name=enableMultiplex,proto3" json:"enableMultiplex,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty" validate:"lte=732"
	Token                string   `protobuf:"bytes,9,opt,name=token,proto3" json:"token,omitempty" toml:",omitempty" validate:"lte=732"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ipfs) Reset()         { *m = Ipfs{} }
func (m *Ipfs) String() string { return proto.CompactTextString(m) }
func (*Ipfs) ProtoMessage()    {}
func (*Ipfs) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{3}
}
func (m *Ipfs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ipfs.Unmarshal(m, b)
}
func (m *Ipfs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ipfs.Marshal(b, m, deterministic)
}
func (dst *Ipfs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ipfs.Merge(dst, src)
}
func (m *Ipfs) XXX_Size() int {
	return xxx_messageInfo_Ipfs.Size(m)
}
func (m *Ipfs) XXX_DiscardUnknown() {
	xxx_messageInfo_Ipfs.DiscardUnknown(m)
}

var xxx_messageInfo_Ipfs proto.InternalMessageInfo

func (m *Ipfs) GetFakeApiListenAddr() string {
	if m != nil {
		return m.FakeApiListenAddr
	}
	return ""
}

func (m *Ipfs) GetGatewayServerName() string {
	if m != nil {
		return m.GatewayServerName
	}
	return ""
}

func (m *Ipfs) GetApiServerName() string {
	if m != nil {
		return m.ApiServerName
	}
	return ""
}

func (m *Ipfs) GetProfile() []string {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *Ipfs) GetAutoMigrate() bool {
	if m != nil {
		return m.AutoMigrate
	}
	return false
}

func (m *Ipfs) GetEnableIpnsPubSub() bool {
	if m != nil {
		return m.EnableIpnsPubSub
	}
	return false
}

func (m *Ipfs) GetEnablePubSub() bool {
	if m != nil {
		return m.EnablePubSub
	}
	return false
}

func (m *Ipfs) GetEnableMultiplex() bool {
	if m != nil {
		return m.EnableMultiplex
	}
	return false
}

func (m *Ipfs) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type IpfsServer struct {
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"required"
	Peer string `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty" toml:",omitempty" validate:"required"`
	// @inject_tag: toml:",omitempty" validate:"lte=732"
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty" toml:",omitempty" validate:"lte=732"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IpfsServer) Reset()         { *m = IpfsServer{} }
func (m *IpfsServer) String() string { return proto.CompactTextString(m) }
func (*IpfsServer) ProtoMessage()    {}
func (*IpfsServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{4}
}
func (m *IpfsServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IpfsServer.Unmarshal(m, b)
}
func (m *IpfsServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IpfsServer.Marshal(b, m, deterministic)
}
func (dst *IpfsServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IpfsServer.Merge(dst, src)
}
func (m *IpfsServer) XXX_Size() int {
	return xxx_messageInfo_IpfsServer.Size(m)
}
func (m *IpfsServer) XXX_DiscardUnknown() {
	xxx_messageInfo_IpfsServer.DiscardUnknown(m)
}

var xxx_messageInfo_IpfsServer proto.InternalMessageInfo

func (m *IpfsServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *IpfsServer) GetPeer() string {
	if m != nil {
		return m.Peer
	}
	return ""
}

func (m *IpfsServer) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type FileServer struct {
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"hostname"
	Zip string `protobuf:"bytes,2,opt,name=zip,proto3" json:"zip,omitempty" toml:",omitempty" validate:"hostname"`
	// @inject_tag: toml:",omitempty"
	Redirect map[string]string `protobuf:"bytes,3,rep,name=redirect,proto3" json:"redirect,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	Dev                  bool     `protobuf:"varint,4,opt,name=dev,proto3" json:"dev,omitempty" toml:",omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileServer) Reset()         { *m = FileServer{} }
func (m *FileServer) String() string { return proto.CompactTextString(m) }
func (*FileServer) ProtoMessage()    {}
func (*FileServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{5}
}
func (m *FileServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileServer.Unmarshal(m, b)
}
func (m *FileServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileServer.Marshal(b, m, deterministic)
}
func (dst *FileServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileServer.Merge(dst, src)
}
func (m *FileServer) XXX_Size() int {
	return xxx_messageInfo_FileServer.Size(m)
}
func (m *FileServer) XXX_DiscardUnknown() {
	xxx_messageInfo_FileServer.DiscardUnknown(m)
}

var xxx_messageInfo_FileServer proto.InternalMessageInfo

func (m *FileServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FileServer) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *FileServer) GetRedirect() map[string]string {
	if m != nil {
		return m.Redirect
	}
	return nil
}

func (m *FileServer) GetDev() bool {
	if m != nil {
		return m.Dev
	}
	return false
}

type HttpProxyServer struct {
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"tcp_addr"
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty" toml:",omitempty" validate:"tcp_addr"`
	// @inject_tag: toml:",omitempty"
	KeepAlive            bool     `protobuf:"varint,3,opt,name=keepAlive,proto3" json:"keepAlive,omitempty" toml:",omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpProxyServer) Reset()         { *m = HttpProxyServer{} }
func (m *HttpProxyServer) String() string { return proto.CompactTextString(m) }
func (*HttpProxyServer) ProtoMessage()    {}
func (*HttpProxyServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{6}
}
func (m *HttpProxyServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpProxyServer.Unmarshal(m, b)
}
func (m *HttpProxyServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpProxyServer.Marshal(b, m, deterministic)
}
func (dst *HttpProxyServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpProxyServer.Merge(dst, src)
}
func (m *HttpProxyServer) XXX_Size() int {
	return xxx_messageInfo_HttpProxyServer.Size(m)
}
func (m *HttpProxyServer) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpProxyServer.DiscardUnknown(m)
}

var xxx_messageInfo_HttpProxyServer proto.InternalMessageInfo

func (m *HttpProxyServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HttpProxyServer) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HttpProxyServer) GetKeepAlive() bool {
	if m != nil {
		return m.KeepAlive
	}
	return false
}

type AdpRouter struct {
	// @inject_tag: toml:",omitempty" validate:"hostname"
	// *.b64 is base64 encoded.
	// *.ipfs is fetched from ipfs network.
	// ipfs file is of toml format:
	//   [[Ipfs]]
	//   Path = "Qmxxx..xA"
	//   Base64 = true
	//
	//   [[Ipfs]]
	//   Path = "Qmxxx..xB"
	RulesDirName string `protobuf:"bytes,1,opt,name=rulesDirName,proto3" json:"rulesDirName,omitempty" toml:",omitempty" validate:"hostname"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Blocked string `protobuf:"bytes,2,opt,name=blocked,proto3" json:"blocked,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" omitempty,hostname,nefield=Blocked"
	Unblocked string `protobuf:"bytes,3,opt,name=unblocked,proto3" json:"unblocked,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	EtcHostsIpAsBlocked bool `protobuf:"varint,4,opt,name=etcHostsIpAsBlocked,proto3" json:"etcHostsIpAsBlocked,omitempty" toml:",omitempty"`
	// @inject_tag: toml:",omitempty"
	Dev                  bool     `protobuf:"varint,5,opt,name=dev,proto3" json:"dev,omitempty" toml:",omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdpRouter) Reset()         { *m = AdpRouter{} }
func (m *AdpRouter) String() string { return proto.CompactTextString(m) }
func (*AdpRouter) ProtoMessage()    {}
func (*AdpRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{7}
}
func (m *AdpRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdpRouter.Unmarshal(m, b)
}
func (m *AdpRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdpRouter.Marshal(b, m, deterministic)
}
func (dst *AdpRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdpRouter.Merge(dst, src)
}
func (m *AdpRouter) XXX_Size() int {
	return xxx_messageInfo_AdpRouter.Size(m)
}
func (m *AdpRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_AdpRouter.DiscardUnknown(m)
}

var xxx_messageInfo_AdpRouter proto.InternalMessageInfo

func (m *AdpRouter) GetRulesDirName() string {
	if m != nil {
		return m.RulesDirName
	}
	return ""
}

func (m *AdpRouter) GetBlocked() string {
	if m != nil {
		return m.Blocked
	}
	return ""
}

func (m *AdpRouter) GetUnblocked() string {
	if m != nil {
		return m.Unblocked
	}
	return ""
}

func (m *AdpRouter) GetEtcHostsIpAsBlocked() bool {
	if m != nil {
		return m.EtcHostsIpAsBlocked
	}
	return false
}

func (m *AdpRouter) GetDev() bool {
	if m != nil {
		return m.Dev
	}
	return false
}

type IPNetRouter struct {
	// @inject_tag: toml:",omitempty" validate:"dive,ip"
	Ip []string `protobuf:"bytes,1,rep,name=ip,proto3" json:"ip,omitempty" toml:",omitempty" validate:"dive,ip"`
	// @inject_tag: toml:",omitempty" validate:"dive,cidr"
	Net []string `protobuf:"bytes,2,rep,name=net,proto3" json:"net,omitempty" toml:",omitempty" validate:"dive,cidr"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Matched string `protobuf:"bytes,3,opt,name=matched,proto3" json:"matched,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname,nefield=Matched"
	Unmatched string `protobuf:"bytes,4,opt,name=unmatched,proto3" json:"unmatched,omitempty" toml:",omitempty" validate:"omitempty,hostname,nefield=Matched"`
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	FileTest             string   `protobuf:"bytes,5,opt,name=fileTest,proto3" json:"fileTest,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPNetRouter) Reset()         { *m = IPNetRouter{} }
func (m *IPNetRouter) String() string { return proto.CompactTextString(m) }
func (*IPNetRouter) ProtoMessage()    {}
func (*IPNetRouter) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{8}
}
func (m *IPNetRouter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPNetRouter.Unmarshal(m, b)
}
func (m *IPNetRouter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPNetRouter.Marshal(b, m, deterministic)
}
func (dst *IPNetRouter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPNetRouter.Merge(dst, src)
}
func (m *IPNetRouter) XXX_Size() int {
	return xxx_messageInfo_IPNetRouter.Size(m)
}
func (m *IPNetRouter) XXX_DiscardUnknown() {
	xxx_messageInfo_IPNetRouter.DiscardUnknown(m)
}

var xxx_messageInfo_IPNetRouter proto.InternalMessageInfo

func (m *IPNetRouter) GetIp() []string {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *IPNetRouter) GetNet() []string {
	if m != nil {
		return m.Net
	}
	return nil
}

func (m *IPNetRouter) GetMatched() string {
	if m != nil {
		return m.Matched
	}
	return ""
}

func (m *IPNetRouter) GetUnmatched() string {
	if m != nil {
		return m.Unmatched
	}
	return ""
}

func (m *IPNetRouter) GetFileTest() string {
	if m != nil {
		return m.FileTest
	}
	return ""
}

type RouterItem struct {
	// @inject_tag: toml:",omitempty" validate:"omitempty,hostname"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" toml:",omitempty" validate:"omitempty,hostname"`
	// Types that are valid to be assigned to Router:
	//	*RouterItem_Adp
	//	*RouterItem_Ipnet
	Router               isRouterItem_Router `protobuf_oneof:"router"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RouterItem) Reset()         { *m = RouterItem{} }
func (m *RouterItem) String() string { return proto.CompactTextString(m) }
func (*RouterItem) ProtoMessage()    {}
func (*RouterItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{9}
}
func (m *RouterItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouterItem.Unmarshal(m, b)
}
func (m *RouterItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouterItem.Marshal(b, m, deterministic)
}
func (dst *RouterItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouterItem.Merge(dst, src)
}
func (m *RouterItem) XXX_Size() int {
	return xxx_messageInfo_RouterItem.Size(m)
}
func (m *RouterItem) XXX_DiscardUnknown() {
	xxx_messageInfo_RouterItem.DiscardUnknown(m)
}

var xxx_messageInfo_RouterItem proto.InternalMessageInfo

type isRouterItem_Router interface {
	isRouterItem_Router()
}

type RouterItem_Adp struct {
	Adp *AdpRouter `protobuf:"bytes,2,opt,name=adp,proto3,oneof"`
}
type RouterItem_Ipnet struct {
	Ipnet *IPNetRouter `protobuf:"bytes,3,opt,name=ipnet,proto3,oneof"`
}

func (*RouterItem_Adp) isRouterItem_Router()   {}
func (*RouterItem_Ipnet) isRouterItem_Router() {}

func (m *RouterItem) GetRouter() isRouterItem_Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *RouterItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RouterItem) GetAdp() *AdpRouter {
	if x, ok := m.GetRouter().(*RouterItem_Adp); ok {
		return x.Adp
	}
	return nil
}

func (m *RouterItem) GetIpnet() *IPNetRouter {
	if x, ok := m.GetRouter().(*RouterItem_Ipnet); ok {
		return x.Ipnet
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RouterItem) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RouterItem_OneofMarshaler, _RouterItem_OneofUnmarshaler, _RouterItem_OneofSizer, []interface{}{
		(*RouterItem_Adp)(nil),
		(*RouterItem_Ipnet)(nil),
	}
}

func _RouterItem_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RouterItem)
	// router
	switch x := m.Router.(type) {
	case *RouterItem_Adp:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Adp); err != nil {
			return err
		}
	case *RouterItem_Ipnet:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ipnet); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RouterItem.Router has unexpected type %T", x)
	}
	return nil
}

func _RouterItem_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RouterItem)
	switch tag {
	case 2: // router.adp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AdpRouter)
		err := b.DecodeMessage(msg)
		m.Router = &RouterItem_Adp{msg}
		return true, err
	case 3: // router.ipnet
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IPNetRouter)
		err := b.DecodeMessage(msg)
		m.Router = &RouterItem_Ipnet{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RouterItem_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RouterItem)
	// router
	switch x := m.Router.(type) {
	case *RouterItem_Adp:
		s := proto.Size(x.Adp)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RouterItem_Ipnet:
		s := proto.Size(x.Ipnet)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// reserved names: DIRECT over with hybrid
// env:
// HYBRID_ROOT_PATH=$HOME/.hybrid
// HYBRID_DEV=false
// HYBRID_BIND=:7777
// HYBRID_FILE_SERVERS_DISABLED=a,b,c
// HYBRID_ROUTER_DISABLED=a,b,c
// @inject_field: tree *ConfigTree
type Config struct {
	Basic                *Basic             `protobuf:"bytes,1,opt,name=basic,proto3" json:"basic,omitempty"`
	Log                  *Log               `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Ipfs                 *Ipfs              `protobuf:"bytes,3,opt,name=ipfs,proto3" json:"ipfs,omitempty"`
	IpfsServers          []*IpfsServer      `protobuf:"bytes,4,rep,name=ipfsServers,proto3" json:"ipfsServers,omitempty"`
	FileServers          []*FileServer      `protobuf:"bytes,5,rep,name=fileServers,proto3" json:"fileServers,omitempty"`
	HttpProxyServers     []*HttpProxyServer `protobuf:"bytes,6,rep,name=httpProxyServers,proto3" json:"httpProxyServers,omitempty"`
	Routers              []*RouterItem      `protobuf:"bytes,7,rep,name=routers,proto3" json:"routers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_config_9a75a3fc3cffaac9, []int{10}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (dst *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(dst, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetBasic() *Basic {
	if m != nil {
		return m.Basic
	}
	return nil
}

func (m *Config) GetLog() *Log {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *Config) GetIpfs() *Ipfs {
	if m != nil {
		return m.Ipfs
	}
	return nil
}

func (m *Config) GetIpfsServers() []*IpfsServer {
	if m != nil {
		return m.IpfsServers
	}
	return nil
}

func (m *Config) GetFileServers() []*FileServer {
	if m != nil {
		return m.FileServers
	}
	return nil
}

func (m *Config) GetHttpProxyServers() []*HttpProxyServer {
	if m != nil {
		return m.HttpProxyServers
	}
	return nil
}

func (m *Config) GetRouters() []*RouterItem {
	if m != nil {
		return m.Routers
	}
	return nil
}

func init() {
	proto.RegisterType((*ConfigTree)(nil), "protos.ConfigTree")
	proto.RegisterType((*Basic)(nil), "protos.Basic")
	proto.RegisterType((*Log)(nil), "protos.Log")
	proto.RegisterType((*Ipfs)(nil), "protos.Ipfs")
	proto.RegisterType((*IpfsServer)(nil), "protos.IpfsServer")
	proto.RegisterType((*FileServer)(nil), "protos.FileServer")
	proto.RegisterMapType((map[string]string)(nil), "protos.FileServer.RedirectEntry")
	proto.RegisterType((*HttpProxyServer)(nil), "protos.HttpProxyServer")
	proto.RegisterType((*AdpRouter)(nil), "protos.AdpRouter")
	proto.RegisterType((*IPNetRouter)(nil), "protos.IPNetRouter")
	proto.RegisterType((*RouterItem)(nil), "protos.RouterItem")
	proto.RegisterType((*Config)(nil), "protos.Config")
}

func init() { proto.RegisterFile("protos/config.proto", fileDescriptor_config_9a75a3fc3cffaac9) }

var fileDescriptor_config_9a75a3fc3cffaac9 = []byte{
	// 934 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x56, 0xcd, 0x6e, 0x23, 0x45,
	0x10, 0x66, 0x3c, 0xb6, 0x63, 0xd7, 0xac, 0xd9, 0x6c, 0x07, 0x41, 0xb4, 0x02, 0x14, 0x0d, 0x8b,
	0x14, 0x01, 0x4a, 0x90, 0xe1, 0x80, 0x80, 0x8b, 0xb3, 0x2c, 0x8a, 0xd1, 0x66, 0x15, 0xf5, 0xae,
	0x84, 0xc4, 0x6d, 0xc6, 0xd3, 0xb6, 0x5b, 0x1e, 0xcf, 0x8c, 0xa6, 0x7b, 0x4c, 0xcc, 0x81, 0x0b,
	0x07, 0xde, 0x05, 0x1e, 0x82, 0x27, 0xe0, 0xc6, 0x03, 0xd1, 0xd5, 0x3f, 0xf3, 0xe3, 0xac, 0x72,
	0xeb, 0xfa, 0xbe, 0xaf, 0xaa, 0x6b, 0xaa, 0xaa, 0xcb, 0x86, 0x93, 0xa2, 0xcc, 0x65, 0x2e, 0x2e,
	0x17, 0x79, 0xb6, 0xe4, 0xab, 0x0b, 0x6d, 0x91, 0xa1, 0x01, 0xc3, 0xbf, 0x7c, 0x80, 0xe7, 0x9a,
	0x78, 0x53, 0x32, 0x46, 0x4e, 0xe1, 0x68, 0xc7, 0x4a, 0xc1, 0xf3, 0xec, 0xd4, 0x3b, 0xf3, 0xce,
	0xc7, 0xd4, 0x99, 0xe4, 0x29, 0x8c, 0xca, 0x3c, 0x97, 0xaf, 0xa2, 0x2d, 0x3b, 0xed, 0x69, 0xaa,
	0xb6, 0x1d, 0x77, 0x1b, 0xc9, 0xf5, 0xa9, 0xdf, 0x70, 0x68, 0x93, 0x8f, 0x01, 0xcc, 0xc5, 0xda,
	0xb3, 0xaf, 0xd9, 0x16, 0xd2, 0xf0, 0xda, 0x7b, 0xd0, 0xe6, 0xb5, 0xbf, 0x8a, 0xcd, 0x8b, 0xa5,
	0xd0, 0xde, 0x43, 0x13, 0xdb, 0xd9, 0x8e, 0xd3, 0x9e, 0x47, 0x0d, 0xa7, 0xfd, 0x3e, 0x84, 0xb1,
	0x90, 0x79, 0xc9, 0xb4, 0xe3, 0x48, 0x93, 0x0d, 0x50, 0xb3, 0xda, 0x75, 0xdc, 0x62, 0xb5, 0xef,
	0x33, 0x98, 0x2c, 0x79, 0xca, 0x04, 0x75, 0x1f, 0x0c, 0x5a, 0xd1, 0x05, 0x3b, 0x2a, 0x1d, 0x27,
	0x38, 0x50, 0xb9, 0x58, 0x65, 0xd5, 0x8e, 0xf5, 0xc8, 0xa8, 0x3a, 0x60, 0x47, 0xa5, 0x63, 0x4d,
	0x0e, 0x54, 0x08, 0x86, 0x7f, 0x7a, 0x30, 0xb8, 0x8a, 0x04, 0x5f, 0x3c, 0xd0, 0xa7, 0x63, 0xf0,
	0x13, 0xb6, 0xd3, 0x2d, 0x1a, 0x51, 0x3c, 0x12, 0x02, 0xfd, 0x98, 0x67, 0x89, 0xed, 0x8c, 0x3e,
	0x93, 0x73, 0x78, 0xbc, 0x4c, 0x2b, 0xb1, 0x9e, 0x67, 0x92, 0x95, 0xbb, 0x28, 0xbd, 0x11, 0xba,
	0x35, 0x13, 0x7a, 0x08, 0x93, 0xf7, 0x60, 0x20, 0xf3, 0x0d, 0xcb, 0x6c, 0x6b, 0x8c, 0x11, 0xbe,
	0x00, 0xff, 0x65, 0xbe, 0x72, 0x97, 0x79, 0xcd, 0x65, 0x4a, 0x9e, 0xb2, 0x1d, 0x4b, 0xed, 0x8c,
	0x18, 0x83, 0xbc, 0x0f, 0x43, 0x19, 0x95, 0x2b, 0x26, 0x6d, 0x12, 0xd6, 0x0a, 0xff, 0xeb, 0x41,
	0x7f, 0xae, 0x3a, 0x46, 0xbe, 0x80, 0x27, 0xcb, 0x68, 0xc3, 0x66, 0x05, 0x7f, 0xc9, 0x85, 0x64,
	0xd9, 0x2c, 0x49, 0x4a, 0xfb, 0x65, 0xf7, 0x09, 0x54, 0xaf, 0x22, 0xc9, 0x7e, 0x8d, 0xf6, 0xaf,
	0x55, 0x9a, 0xac, 0x6c, 0x0d, 0xe5, 0x7d, 0x02, 0x6b, 0x1b, 0x15, 0xbc, 0xa5, 0x34, 0x39, 0x74,
	0x41, 0xac, 0xa8, 0x7a, 0x12, 0xd8, 0x3b, 0x55, 0x09, 0x1f, 0x2b, 0x6a, 0x4d, 0x72, 0x06, 0x41,
	0x54, 0xc9, 0xfc, 0x86, 0xaf, 0x4a, 0x15, 0x5b, 0xd7, 0x61, 0x44, 0xdb, 0x10, 0xf9, 0x0c, 0x8e,
	0x59, 0x16, 0xc5, 0x29, 0x9b, 0x17, 0x99, 0xb8, 0xad, 0xe2, 0xd7, 0x55, 0xac, 0x67, 0x75, 0x44,
	0xef, 0xe1, 0x24, 0x84, 0x47, 0x06, 0xb3, 0xba, 0x23, 0xad, 0xeb, 0x60, 0xd8, 0x1d, 0x63, 0xdf,
	0x54, 0xa9, 0xe4, 0x45, 0xca, 0xee, 0xf4, 0x04, 0x8f, 0xe8, 0x21, 0xdc, 0x74, 0x67, 0xdc, 0xee,
	0xce, 0x4f, 0x00, 0x58, 0x55, 0xf3, 0x75, 0xd8, 0xff, 0x0c, 0x3f, 0xdb, 0x94, 0x53, 0x9f, 0x11,
	0x2b, 0x18, 0x2b, 0x6d, 0xd1, 0xf4, 0xb9, 0x89, 0xe5, 0xb7, 0x63, 0xfd, 0xe3, 0x01, 0xfc, 0xa8,
	0xca, 0xf0, 0x40, 0x30, 0x35, 0x05, 0xbf, 0xf1, 0xc2, 0xc6, 0xc2, 0x23, 0xf9, 0x5e, 0x2d, 0x04,
	0x96, 0xf0, 0x92, 0x2d, 0xb0, 0xe3, 0xfe, 0x79, 0x30, 0x3d, 0x33, 0x7b, 0x47, 0x5c, 0x34, 0xb1,
	0x2e, 0xa8, 0x95, 0xbc, 0xc8, 0x64, 0xb9, 0xa7, 0xb5, 0x87, 0x9b, 0xaa, 0x7e, 0x3d, 0x55, 0x4f,
	0xbf, 0x83, 0x49, 0x47, 0x8c, 0x92, 0x0d, 0xdb, 0xdb, 0x2c, 0xf0, 0x88, 0xd9, 0xab, 0x81, 0xad,
	0xdc, 0x1c, 0x18, 0xe3, 0xdb, 0xde, 0x37, 0x5e, 0xf8, 0x33, 0x3c, 0xbe, 0x96, 0xb2, 0xb8, 0x2d,
	0xf3, 0xbb, 0xfd, 0xc3, 0x25, 0x59, 0xe7, 0x42, 0xba, 0x92, 0xe0, 0x19, 0xd7, 0xc4, 0x86, 0xb1,
	0x62, 0x96, 0xf2, 0x9d, 0x19, 0x9b, 0x11, 0x6d, 0x80, 0xf0, 0x6f, 0x0f, 0xc6, 0xb3, 0xa4, 0xa0,
	0x79, 0xa5, 0x5e, 0x0b, 0x36, 0x56, 0xbf, 0xd6, 0x1f, 0xb8, 0x99, 0x32, 0x13, 0xbb, 0x83, 0xe1,
	0x90, 0xc5, 0x69, 0xbe, 0xd8, 0xb0, 0xc4, 0x5e, 0xe3, 0x4c, 0xbc, 0xa9, 0xca, 0x1c, 0x67, 0x1a,
	0xd0, 0x00, 0xe4, 0x4b, 0x38, 0x61, 0x72, 0x71, 0xad, 0x52, 0x12, 0xf3, 0x62, 0x26, 0xae, 0xac,
	0xce, 0x54, 0xe8, 0x6d, 0x94, 0xab, 0xe1, 0xa0, 0xae, 0x61, 0xf8, 0x87, 0x07, 0xc1, 0xfc, 0xf6,
	0x15, 0x93, 0x36, 0xdf, 0x77, 0xa1, 0xa7, 0x9a, 0xe6, 0xe9, 0x59, 0x57, 0x27, 0xf4, 0xc8, 0x18,
	0x7e, 0x3e, 0x02, 0x78, 0xc4, 0x6c, 0xb7, 0x91, 0x5c, 0xac, 0xeb, 0x8c, 0x9c, 0x69, 0xb2, 0x75,
	0x5c, 0xdf, 0x65, 0xeb, 0x58, 0xb5, 0x96, 0xf1, 0xe1, 0xbc, 0x61, 0xaa, 0x9a, 0x66, 0x6b, 0xd4,
	0x76, 0xf8, 0x3b, 0x80, 0xb9, 0x7f, 0x2e, 0xd9, 0xf6, 0xad, 0x7d, 0xf8, 0x14, 0xfc, 0x28, 0x31,
	0xd3, 0x14, 0x4c, 0x9f, 0xb8, 0xb1, 0xa9, 0xeb, 0x7c, 0xfd, 0x0e, 0x45, 0x9e, 0x7c, 0x0e, 0x03,
	0x5e, 0x64, 0x76, 0xa3, 0x04, 0xd3, 0x13, 0x27, 0x6c, 0x7d, 0xa2, 0x92, 0x1a, 0xcd, 0xd5, 0x08,
	0x86, 0xa5, 0x86, 0xc2, 0x7f, 0x7b, 0x30, 0x34, 0xbf, 0x77, 0xe4, 0x13, 0x18, 0xc4, 0xb8, 0x4c,
	0xf5, 0xed, 0xc1, 0x74, 0xe2, 0x22, 0xe8, 0x0d, 0x4b, 0x0d, 0x47, 0x3e, 0x02, 0x3f, 0xcd, 0x57,
	0x36, 0x9b, 0xc0, 0x49, 0xd4, 0xee, 0xa3, 0x88, 0xab, 0xdd, 0xd0, 0xc7, 0x5f, 0x1c, 0x9b, 0xc4,
	0xa3, 0x3a, 0x09, 0x85, 0x51, 0xcd, 0x90, 0xaf, 0x21, 0xe0, 0xf5, 0x5b, 0x14, 0x7a, 0xb7, 0x04,
	0x53, 0xd2, 0x16, 0x1a, 0x8a, 0xb6, 0x65, 0xe8, 0xb5, 0xac, 0x1f, 0x8a, 0x50, 0x55, 0xec, 0x78,
	0x35, 0x6f, 0x88, 0xb6, 0x65, 0xe4, 0x39, 0x1c, 0xaf, 0xbb, 0x93, 0x2e, 0xd4, 0x1e, 0x42, 0xd7,
	0x0f, 0x9c, 0xeb, 0xc1, 0x4b, 0xa0, 0xf7, 0x1c, 0xd4, 0x72, 0x3d, 0x32, 0xb5, 0x12, 0x6a, 0x37,
	0x75, 0xae, 0x6d, 0x1a, 0x47, 0x9d, 0xe4, 0xea, 0xd9, 0x2f, 0xe1, 0x8a, 0xcb, 0x75, 0x15, 0x5f,
	0x2c, 0xf2, 0xed, 0x25, 0xdb, 0x16, 0xea, 0x91, 0x2e, 0xf3, 0xbb, 0xcb, 0xf5, 0x3e, 0x2e, 0x79,
	0x62, 0xff, 0x73, 0xc4, 0xe6, 0xdf, 0xc6, 0x57, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x34,
	0xef, 0xa2, 0x8b, 0x08, 0x00, 0x00,
}
